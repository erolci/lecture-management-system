0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node',
1 verbose cli   '/usr/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'mongo-hacker' ]
2 info using npm@1.4.14
3 info using node@v0.10.29
4 verbose node symlink /usr/bin/node
5 verbose cache add [ 'mongo-hacker', null ]
6 verbose cache add name=undefined spec="mongo-hacker" args=["mongo-hacker",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'mongo-hacker',
7 verbose parsed url   path: 'mongo-hacker',
7 verbose parsed url   href: 'mongo-hacker' }
8 silly lockFile 1933551c-mongo-hacker mongo-hacker
9 verbose lock mongo-hacker /root/.npm/1933551c-mongo-hacker.lock
10 silly lockFile 1933551c-mongo-hacker mongo-hacker
11 silly lockFile 1933551c-mongo-hacker mongo-hacker
12 verbose addNamed [ 'mongo-hacker', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile bf903ed2-mongo-hacker mongo-hacker@
15 verbose lock mongo-hacker@ /root/.npm/bf903ed2-mongo-hacker.lock
16 silly addNameRange { name: 'mongo-hacker', range: '*', hasData: false }
17 verbose url raw mongo-hacker
18 verbose url resolving [ 'https://registry.npmjs.org/', './mongo-hacker' ]
19 verbose url resolved https://registry.npmjs.org/mongo-hacker
20 info trying registry request attempt 1 at 22:45:49
21 http GET https://registry.npmjs.org/mongo-hacker
22 http 200 https://registry.npmjs.org/mongo-hacker
23 silly registry.get cb [ 200,
23 silly registry.get   { date: 'Tue, 18 Nov 2014 22:45:50 GMT',
23 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
23 silly registry.get     etag: '"N8431WV3J900BMX17HJ72LG0"',
23 silly registry.get     'content-type': 'application/json',
23 silly registry.get     'cache-control': 'max-age=60',
23 silly registry.get     'content-length': '12618',
23 silly registry.get     'accept-ranges': 'bytes',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     age: '35',
23 silly registry.get     'x-served-by': 'cache-ams4120-AMS',
23 silly registry.get     'x-cache': 'HIT',
23 silly registry.get     'x-cache-hits': '1',
23 silly registry.get     'x-timer': 'S1416350750.715634,VS0,VE0',
23 silly registry.get     vary: 'Accept',
23 silly registry.get     'keep-alive': 'timeout=10, max=50',
23 silly registry.get     connection: 'Keep-Alive' } ]
24 silly addNameRange number 2 { name: 'mongo-hacker', range: '*', hasData: true }
25 silly addNameRange versions [ 'mongo-hacker', [ '0.0.3' ] ]
26 verbose addNamed [ 'mongo-hacker', '0.0.3' ]
27 verbose addNamed [ '0.0.3', '0.0.3' ]
28 silly lockFile f6c382ed-mongo-hacker-0-0-3 mongo-hacker@0.0.3
29 verbose lock mongo-hacker@0.0.3 /root/.npm/f6c382ed-mongo-hacker-0-0-3.lock
30 silly lockFile 0ad8b388-go-hacker-mongo-hacker-0-0-3-tgz https://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz
31 verbose lock https://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz /root/.npm/0ad8b388-go-hacker-mongo-hacker-0-0-3-tgz.lock
32 verbose addRemoteTarball [ 'https://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz',
32 verbose addRemoteTarball   '3405ff3f2d4494b8daba308f673170e04e633f52' ]
33 info retry fetch attempt 1 at 22:45:50
34 verbose fetch to= /root/tmp/npm-13337-AI_3W9NY/registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz
35 http GET https://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz
36 http 200 https://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz
37 silly lockFile 0ad8b388-go-hacker-mongo-hacker-0-0-3-tgz https://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz
38 silly lockFile 0ad8b388-go-hacker-mongo-hacker-0-0-3-tgz https://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz
39 silly lockFile f6c382ed-mongo-hacker-0-0-3 mongo-hacker@0.0.3
40 silly lockFile f6c382ed-mongo-hacker-0-0-3 mongo-hacker@0.0.3
41 silly lockFile bf903ed2-mongo-hacker mongo-hacker@
42 silly lockFile bf903ed2-mongo-hacker mongo-hacker@
43 silly resolved [ { name: 'mongo-hacker',
43 silly resolved     version: '0.0.3',
43 silly resolved     description: 'MongoDB Shell Enhancements for Hackers',
43 silly resolved     scripts:
43 silly resolved      { test: 'echo "Error: no test specified" && exit 1',
43 silly resolved        install: 'make all',
43 silly resolved        update: 'make all',
43 silly resolved        postuninstall: 'make uninstall' },
43 silly resolved     repository:
43 silly resolved      { type: 'git',
43 silly resolved        url: 'git@github.com:TylerBrock/mongo-hacker.git' },
43 silly resolved     keywords: [ 'mongodb', 'shell', 'hacks', 'tweaks' ],
43 silly resolved     author: { name: 'Tyler Brock', email: 'tyler.brock@gmail.com' },
43 silly resolved     homepage: 'http://tylerbrock.github.io/mongo-hacker/',
43 silly resolved     license: 'MIT',
43 silly resolved     bugs: { url: 'https://github.com/TylerBrock/mongo-hacker/issues' },
43 silly resolved     readme: '# MongoDB Shell Enhancements\n\n## Warnings\n\n* These enhancements are useful to me but they don\'t make sense for everyone. Feel free to tweak to your desire and please submit pull requests.\n* Does not work in Windows (currently)\n* Does not work with shells or db servers < 2.2 (currently)\n* Updates called on existing cursors are new and experimental (see notes in API section)\n\n## Installation\n\nLink mongo_hacker.js to `.mongorc.js` in your home directory:\n\n```sh\nmake\n```\n\nor (the manual way)\n\n```sh\nln -sf <mongo-hacker-dir>/mongo_hacker.js ~/.mongorc.js\n```\n\nNote: This currently only works with the v2.2+ of shell (which you can use with earlier versions of the server safely)\n\n## Enhancements\n\n### Basic UX\n\n  - Highlight querytime if verboseShell is enabled\n    - In **green** if querytime is at or below slowms\n    - In **red** if query time is above slowms\n  - IndexParanoia\n    - Automatically show information about index use -- to disable: `setIndexParanoia(false)`\n  - Default indent is 2 spaces instead of tab\n    - Customizable by setting `__indent`\n  - Verbose shell is enabled by default -- to disable: `setVerboseShell(false)`\n  - Disable notfication of "Type \'it\' for more"\n  - Custom prompt: `hostname(process-version)[rs status] db>`\n  - Always pretty print\n  - Show DBs has aligned columns and shows less significant digits (in master for Mongo 2.5/2.6)\n  - Nicer sh.status() output (remove lastmod, take up less space, colorize chunk\'s shard)\n\n#### Colorization\n\nColorized query output\n\n![Colorized Output](http://tylerbrock.github.com/mongo-hacker/screenshots/colorized_shell.png)\n\n### API Additions\n\n#### General\n\nFilter for a collection of documents:\n\n```js\ndb.collection.filter(<criteria>)\n```\n\nOne for finding a single document:\n\n```js\ndb.collection.find({ ... }).one() == db.collection.findOne({ ... })\n```\n\nSelect for selecting fields to return (projection):\n\n```js\ndb.collection.find({ ... }).select({ name: 1 })\n```\n\nReverse for descending sort by insertion order (default) or arbitrary field:\n\n```js\ndb.collection.find({ ... }).reverse()\ndb.collection.find({ ... }).reverse(\'createDate\')\n```\n\nLast for finding last inserted document (default) or document last by given field:\n\n```js\ndb.collection.find({ ... }).last()\ndb.collection.find({ ... }).last(\'createDate\')\n```\n\nUpdate, Replace, Upsert and Remove can be called on a DBQuery Object:\n\n```js\ndb.collection.find({ ... }).update({ ... })  // multi update\ndb.collection.find({ ... }).replace({ ... }) // single replacement\ndb.collection.find({ ... }).upsert({ ... })  // single upsert\ndb.collection.find({ ... }).remove()         // multi remove\n```\n\nSort, limit, and skip through multi updates and removes:\n\n```js\ndb.collection.find({ ... }).limit(7).update({ ... })\ndb.collection.find({ ... }).sort({ ... }).skip(1).limit(3).update({ ... })\ndb.collection.find({ ... }).limit(3).remove()\n```\n\n**Note**: *The performance of multi updates involving a skip or limit may be worse than those without those specifications due to there being absolutely no native support for this feature in MongoDB itself. It should be understood by the user of this software that use of this feature (by calling update on a cursor rather than a collection) is advanced and experimental. The option to do this sort of operation is purely additive to the MongoDB experience with MongoHacker and usage of it is in no way required. Furthermore, its inclusion in this enhancement does not effect the operation of updates invoked through collections and, in practice, is insanely useful.*\n\n\n#### Aggregation Framework\n\nThe aggregation framework is now fluent as well. You can use it as currently documented or via the chainable methods.\n\nCalling aggregate without an array of operations or $operations will make it a match.\n\n```js\n// matches every document\ndb.collection.aggregate()\ndb.collection.aggregate({})\n\n// matches documents where the "a" is equal to 1\ndb.collection.aggregate({a: 1})\n\n// matches documents where "a" is greater than 7\ndb.collection.aggregate({a: {$gt: 7}})\n```\n\nAdditional methods can then be chained on top of the inital match in order to make more complicated aggregations.\n\n```js\n// Match and project\ndb.collection.aggregate(<querydoc>).project(<projection>)\ndb.collection.aggregate({a: 1}).project({a: 1, _id: 0})\n\n// Match, group and sort\ndb.collection.aggregate({<match>}).group({<group>}).sort({<sort>})\ndb.test.aggregate().group({_id: \'$a\', \'sum\': {\'$sum\': 1}}).sort({sum: -1})\n```\n\n#### Helpers\n\nGeneral Shell Helpers\n  - `findCommand(\'search\')` list commands that match the search string\n\nAggregation Framework Helpers -- on collections\n  - Group and Count: `gcount(group_field, filter)`\n  - Group and Sum: `gsum(group_field, sum_field, filter)`\n  - Group and Average: `gavg(group_field, avg_field, filter)`\n\n',
43 silly resolved     readmeFilename: 'README.md',
43 silly resolved     _id: 'mongo-hacker@0.0.3',
43 silly resolved     dist:
43 silly resolved      { shasum: '3405ff3f2d4494b8daba308f673170e04e633f52',
43 silly resolved        tarball: 'http://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz' },
43 silly resolved     _from: 'mongo-hacker@',
43 silly resolved     _npmVersion: '1.3.11',
43 silly resolved     _npmUser: { name: 'tylerbrock', email: 'tyler.brock@gmail.com' },
43 silly resolved     maintainers: [ [Object] ],
43 silly resolved     directories: {},
43 silly resolved     _shasum: '3405ff3f2d4494b8daba308f673170e04e633f52',
43 silly resolved     _resolved: 'https://registry.npmjs.org/mongo-hacker/-/mongo-hacker-0.0.3.tgz' } ]
44 info install mongo-hacker@0.0.3 into /usr/lib
45 info installOne mongo-hacker@0.0.3
46 info /usr/lib/node_modules/mongo-hacker unbuild
47 verbose tar unpack /root/.npm/mongo-hacker/0.0.3/package.tgz
48 silly lockFile 94fe9d21-sr-lib-node-modules-mongo-hacker tar:///usr/lib/node_modules/mongo-hacker
49 verbose lock tar:///usr/lib/node_modules/mongo-hacker /root/.npm/94fe9d21-sr-lib-node-modules-mongo-hacker.lock
50 silly lockFile ac212a9c-m-mongo-hacker-0-0-3-package-tgz tar:///root/.npm/mongo-hacker/0.0.3/package.tgz
51 verbose lock tar:///root/.npm/mongo-hacker/0.0.3/package.tgz /root/.npm/ac212a9c-m-mongo-hacker-0-0-3-package-tgz.lock
52 silly gunzTarPerm modes [ '755', '644' ]
53 silly gunzTarPerm extractEntry package.json
54 silly gunzTarPerm extractEntry .npmignore
55 silly gunzTarPerm extractEntry README.md
56 silly gunzTarPerm extractEntry base.js
57 silly gunzTarPerm extractEntry config.js
58 silly gunzTarPerm extractEntry Makefile
59 silly gunzTarPerm extractEntry hacks/aggregation.js
60 silly gunzTarPerm extractEntry hacks/color.js
61 silly gunzTarPerm extractEntry hacks/common.js
62 silly gunzTarPerm extractEntry hacks/find_and_modify.js
63 silly gunzTarPerm extractEntry hacks/cmd_search.js
64 silly gunzTarPerm extractEntry hacks/index_paranoia.js
65 silly gunzTarPerm extractEntry hacks/old_aggregation.js
66 silly gunzTarPerm extractEntry hacks/prompt.js
67 silly gunzTarPerm extractEntry hacks/sh_status.js
68 silly gunzTarPerm extractEntry hacks/show_dbs.js
69 silly gunzTarPerm extractEntry hacks/auto_complete.js
70 silly gunzTarPerm extractEntry hacks/uuid.js
71 silly gunzTarPerm extractEntry hacks/api.js
72 silly gunzTarPerm extractEntry hacks/verbose.js
73 silly gunzTarPerm extractEntry hacks/helpers.js
74 silly lockFile 94fe9d21-sr-lib-node-modules-mongo-hacker tar:///usr/lib/node_modules/mongo-hacker
75 silly lockFile 94fe9d21-sr-lib-node-modules-mongo-hacker tar:///usr/lib/node_modules/mongo-hacker
76 silly lockFile ac212a9c-m-mongo-hacker-0-0-3-package-tgz tar:///root/.npm/mongo-hacker/0.0.3/package.tgz
77 silly lockFile ac212a9c-m-mongo-hacker-0-0-3-package-tgz tar:///root/.npm/mongo-hacker/0.0.3/package.tgz
78 info preinstall mongo-hacker@0.0.3
79 verbose readDependencies using package.json deps
80 verbose readDependencies using package.json deps
81 silly resolved []
82 verbose about to build /usr/lib/node_modules/mongo-hacker
83 info build /usr/lib/node_modules/mongo-hacker
84 verbose linkStuff [ true, '/usr/lib/node_modules', true, '/usr/lib/node_modules' ]
85 info linkStuff mongo-hacker@0.0.3
86 verbose linkBins mongo-hacker@0.0.3
87 verbose linkMans mongo-hacker@0.0.3
88 verbose rebuildBundles mongo-hacker@0.0.3
89 info install mongo-hacker@0.0.3
90 verbose unsafe-perm in lifecycle false
91 info mongo-hacker@0.0.3 Failed to exec install script
92 info /usr/lib/node_modules/mongo-hacker unbuild
93 info preuninstall mongo-hacker@0.0.3
94 info uninstall mongo-hacker@0.0.3
95 verbose true,/usr/lib/node_modules,/usr/lib/node_modules unbuild mongo-hacker@0.0.3
96 info postuninstall mongo-hacker@0.0.3
97 verbose unsafe-perm in lifecycle false
98 info mongo-hacker@0.0.3 Failed to exec postuninstall script
99 warn continuing anyway mongo-hacker@0.0.3 postuninstall: `make uninstall`
99 warn continuing anyway Exit status 2
100 error mongo-hacker@0.0.3 install: `make all`
100 error Exit status 2
101 error Failed at the mongo-hacker@0.0.3 install script.
101 error This is most likely a problem with the mongo-hacker package,
101 error not with npm itself.
101 error Tell the author that this fails on your system:
101 error     make all
101 error You can get their info via:
101 error     npm owner ls mongo-hacker
101 error There is likely additional logging output above.
102 error System Linux 3.13.0-30-generic
103 error command "/usr/bin/node" "/usr/bin/npm" "install" "-g" "mongo-hacker"
104 error cwd /home/vagrant/Code/lecture-management-system
105 error node -v v0.10.29
106 error npm -v 1.4.14
107 error code ELIFECYCLE
108 verbose exit [ 1, true ]
